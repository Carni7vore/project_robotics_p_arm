function r= check_collision(theta,pos)
    r=0;
    A=[0;0;1];
    a=A(1,1);
    b=A(2,1);
    c=A(3,1);
    W=[0 -c b;c 0 -a;-b a 0];
    S1=[A;-W*[-0.35;0;0.2138]];

    A=[0;-1;0];
    a=A(1,1);
    b=A(2,1);
    c=A(3,1);
    W=[0 -c b;c 0 -a;-b a 0];
    S2=[A;-W*[-0.35;0;0.3625]];

    A=[0;-1;0];
    a=A(1,1);
    b=A(2,1);
    c=A(3,1);
    W=[0 -c b;c 0 -a;-b a 0];
    S3=[A;-W*[-0.35;0;0.6525]];

    A=[0;0;1];
    a=A(1,1);
    b=A(2,1);
    c=A(3,1);
    W=[0 -c b;c 0 -a;-b a 0];
    S4=[A;-W*[-0.35;0;0.8172]];

    A=[0;-1;0];
    a=A(1,1);
    b=A(2,1);
    c=A(3,1);
    W=[0 -c b;c 0 -a;-b a 0];
    S5=[A;-W*[-0.35;0;0.9625]];

    A=[0;0;1];
    a=A(1,1);
    b=A(2,1);
    c=A(3,1);
    W=[0 -c b;c 0 -a;-b a 0];
    S6=[A;-W*[-0.35;0;1.1027]];

    S=[S1,S2,S3,S4,S5,S6];

    scr= @(w)[0,-w(3),w(2),w(4);w(3),0,-w(1),w(5);-w(2),w(1),0,w(6);0,0,0,0];

    z=size(theta);
%         disp(z);
    out=zeros(1,z(2));
    out2=zeros(z(2),12);
    out3=zeros(z(2),1);
    for k=1:z(2)
        t2= expm(scr(S(:,1))* theta(1));
        t3= t2* expm(scr(S(:,2))* theta(2));
        t4= t3* expm(scr(S(:,3))* theta(3));
        t5= t4* expm(scr(S(:,4))* theta(4));
        t6= t5* expm(scr(S(:,5))* theta(5));  
        t7= t6* expm(scr(S(:,6))* theta(6));

        p= zeros(4,7);
        p(:,1)=[-0.35;0;0.2138;1];
        p(:,2)=[-0.35;0;0.3625;1];
        p(:,3)=[-0.35;0;0.6525;1];
        p(:,4)=[-0.35;0;0.8172;1];
        p(:,5)=[-0.35;0;0.9625;1];
        p(:,6)=[-0.35;0;1.1027;1];
        p(:,7)=[-0.35;-0.00013;1.2159;1];
        q=zeros(4,7);
        q(:,1)= p(:,1) ;
        q(:,2)= t2* p(:,2);
        q(:,3)= t3* p(:,3);
        q(:,4)= t4* p(:,4);
        q(:,5)= t5* p(:,5);
        q(:,6)= t6* p(:,6);
        q(:,7)= t7* p(:,7);
        
        flag2=0;
        p0= [[-0.35;0;0.1115] q(1:3,:)];

%        
        for s=1:12
        if(flag2==1)
            out3(k,1)=1;
            flag2=0;
            break;
        end
            for i=1:8
                    v2=  pos(:,s)-p0(:,i);
                    n2=norm(v2);
                    if n2< (r+r2)
                        flag2=1;
                        r=1;
%                         disp(n2);
                        break;
                    else
                        flag2=0;
                    end
            end
%                 out2(k,s)=flag2;
        end

    end

end